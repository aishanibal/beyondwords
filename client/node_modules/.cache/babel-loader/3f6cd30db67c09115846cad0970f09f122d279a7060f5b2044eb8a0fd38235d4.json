{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Supabase configuration\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Create Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Function to save waitlist email\nexport const saveWaitlistEmail = async (email, source = 'website') => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('waitlist_emails').insert([{\n      email: email,\n      source: source,\n      created_at: new Date().toISOString()\n    }]);\n    if (error) {\n      console.error('Error saving email:', error);\n      throw error;\n    }\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    console.error('Supabase error:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// Function to get all waitlist emails (for admin purposes)\nexport const getWaitlistEmails = async () => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('waitlist_emails').select('*').order('created_at', {\n      ascending: false\n    });\n    if (error) {\n      console.error('Error fetching emails:', error);\n      throw error;\n    }\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    console.error('Supabase error:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","saveWaitlistEmail","email","source","data","error","from","insert","created_at","Date","toISOString","console","success","message","getWaitlistEmails","select","order","ascending"],"sources":["/Users/aishanibal/heirloom-glenne/heirloom_speech_analysis/client/src/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Supabase configuration\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY\n\n// Create Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Function to save waitlist email\nexport const saveWaitlistEmail = async (email, source = 'website') => {\n  try {\n    const { data, error } = await supabase\n      .from('waitlist_emails')\n      .insert([\n        { \n          email: email,\n          source: source,\n          created_at: new Date().toISOString()\n        }\n      ])\n    \n    if (error) {\n      console.error('Error saving email:', error)\n      throw error\n    }\n    \n    return { success: true, data }\n  } catch (error) {\n    console.error('Supabase error:', error)\n    return { success: false, error: error.message }\n  }\n}\n\n// Function to get all waitlist emails (for admin purposes)\nexport const getWaitlistEmails = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('waitlist_emails')\n      .select('*')\n      .order('created_at', { ascending: false })\n    \n    if (error) {\n      console.error('Error fetching emails:', error)\n      throw error\n    }\n    \n    return { success: true, data }\n  } catch (error) {\n    console.error('Supabase error:', error)\n    return { success: false, error: error.message }\n  }\n} "],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;;AAE/D;AACA,OAAO,MAAMC,QAAQ,GAAGP,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;;AAElE;AACA,OAAO,MAAMG,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,GAAG,SAAS,KAAK;EACpE,IAAI;IACF,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,iBAAiB,CAAC,CACvBC,MAAM,CAAC,CACN;MACEL,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdK,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC,CACF,CAAC;IAEJ,IAAIL,KAAK,EAAE;MACTM,OAAO,CAACN,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;IAEA,OAAO;MAAEO,OAAO,EAAE,IAAI;MAAER;IAAK,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAO;MAAEO,OAAO,EAAE,KAAK;MAAEP,KAAK,EAAEA,KAAK,CAACQ;IAAQ,CAAC;EACjD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAM;MAAEV,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,iBAAiB,CAAC,CACvBS,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC;IAE5C,IAAIZ,KAAK,EAAE;MACTM,OAAO,CAACN,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;IAEA,OAAO;MAAEO,OAAO,EAAE,IAAI;MAAER;IAAK,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAO;MAAEO,OAAO,EAAE,KAAK;MAAEP,KAAK,EAAEA,KAAK,CAACQ;IAAQ,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}