{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';// Supabase configuration\nconst supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;// Create Supabase client\nexport const supabase=createClient(supabaseUrl,supabaseAnonKey);// Function to save waitlist email\nexport const saveWaitlistEmail=async function(email){let source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'website';try{const{data,error}=await supabase.from('waitlist_emails').insert([{email:email,source:source,created_at:new Date().toISOString()}]);if(error){console.error('Error saving email:',error);throw error;}return{success:true,data};}catch(error){console.error('Supabase error:',error);return{success:false,error:error.message};}};// Function to get all waitlist emails (for admin purposes)\nexport const getWaitlistEmails=async()=>{try{const{data,error}=await supabase.from('waitlist_emails').select('*').order('created_at',{ascending:false});if(error){console.error('Error fetching emails:',error);throw error;}return{success:true,data};}catch(error){console.error('Supabase error:',error);return{success:false,error:error.message};}};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","saveWaitlistEmail","email","source","arguments","length","undefined","data","error","from","insert","created_at","Date","toISOString","console","success","message","getWaitlistEmails","select","order","ascending"],"sources":["/Users/aishanibal/heirloom-glenne/heirloom_speech_analysis/client/src/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Supabase configuration\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY\n\n// Create Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Function to save waitlist email\nexport const saveWaitlistEmail = async (email, source = 'website') => {\n  try {\n    const { data, error } = await supabase\n      .from('waitlist_emails')\n      .insert([\n        { \n          email: email,\n          source: source,\n          created_at: new Date().toISOString()\n        }\n      ])\n    \n    if (error) {\n      console.error('Error saving email:', error)\n      throw error\n    }\n    \n    return { success: true, data }\n  } catch (error) {\n    console.error('Supabase error:', error)\n    return { success: false, error: error.message }\n  }\n}\n\n// Function to get all waitlist emails (for admin purposes)\nexport const getWaitlistEmails = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('waitlist_emails')\n      .select('*')\n      .order('created_at', { ascending: false })\n    \n    if (error) {\n      console.error('Error fetching emails:', error)\n      throw error\n    }\n    \n    return { success: true, data }\n  } catch (error) {\n    console.error('Supabase error:', error)\n    return { success: false, error: error.message }\n  }\n} "],"mappings":"AAAA,OAASA,YAAY,KAAQ,uBAAuB,CAEpD;AACA,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,KAAM,CAAAC,eAAe,CAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,CAE/D;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAGP,YAAY,CAACC,WAAW,CAAEI,eAAe,CAAC,CAElE;AACA,MAAO,MAAM,CAAAG,iBAAiB,CAAG,cAAAA,CAAOC,KAAK,CAAyB,IAAvB,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAC/D,GAAI,CACF,KAAM,CAAEG,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAR,QAAQ,CACnCS,IAAI,CAAC,iBAAiB,CAAC,CACvBC,MAAM,CAAC,CACN,CACER,KAAK,CAAEA,KAAK,CACZC,MAAM,CAAEA,MAAM,CACdQ,UAAU,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACrC,CAAC,CACF,CAAC,CAEJ,GAAIL,KAAK,CAAE,CACTM,OAAO,CAACN,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CAEA,MAAO,CAAEO,OAAO,CAAE,IAAI,CAAER,IAAK,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACdM,OAAO,CAACN,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,MAAO,CAAEO,OAAO,CAAE,KAAK,CAAEP,KAAK,CAAEA,KAAK,CAACQ,OAAQ,CAAC,CACjD,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,KAAM,CAAEV,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAR,QAAQ,CACnCS,IAAI,CAAC,iBAAiB,CAAC,CACvBS,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,CAAE,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CAE5C,GAAIZ,KAAK,CAAE,CACTM,OAAO,CAACN,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACb,CAEA,MAAO,CAAEO,OAAO,CAAE,IAAI,CAAER,IAAK,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACdM,OAAO,CAACN,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,MAAO,CAAEO,OAAO,CAAE,KAAK,CAAEP,KAAK,CAAEA,KAAK,CAACQ,OAAQ,CAAC,CACjD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}